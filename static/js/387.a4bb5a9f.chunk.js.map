{"version":3,"file":"static/js/387.a4bb5a9f.chunk.js","mappings":"+SAEMA,EAAW,+BACXC,EAAM,mCAAZ,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,oGAC2BC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,uCAAoDC,IAD/E,cACUG,EADV,yBAEWA,EAASC,KAAKC,SAFzB,2EAKeC,EAAkB,GAAlBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAiCC,GAAjC,uFAC2BL,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iCAA8CC,EAA9C,kBAA2DO,EAA3D,gCAD3B,cACUJ,EADV,yBAEWA,EAASC,KAAKC,SAFzB,2EAKeG,EAAmB,GAAnBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAkCC,GAAlC,uFAC2BP,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BU,EAA/B,oBAAkDT,EAAlD,yBAD3B,cACUG,EADV,yBAEWA,GAFX,2EAKeO,EAAe,GAAfA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA8BD,GAA9B,uFAC2BP,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BU,EAA/B,4BAA0DT,IADrF,cACUG,EADV,yBAEWA,EAASC,KAAKO,MAFzB,2EAKeC,EAAkB,GAAlBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAiCH,GAAjC,uFAC2BP,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BU,EAA/B,4BAA0DT,IADrF,cACUG,EADV,yBAEWA,EAASC,KAAKC,SAFzB,kE,0ICvBaQ,EAAcC,EAAAA,GAAAA,GAAH,+FAMXC,EAAaD,EAAAA,GAAAA,GAAH,0C,SCHR,SAASE,IACtB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAaC,EAAAA,EAAAA,MAAbD,SAQR,OANAE,EAAAA,EAAAA,YAAU,YACRV,EAAAA,EAAAA,IAAkBQ,GACfG,MAAK,SAAApB,GAAQ,OAAIgB,GAAW,OAAIhB,GAAnB,IACbqB,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAMG,QAAtB,GACf,GAAE,CAACR,KAGF,SAACP,EAAD,UACGK,EAAQW,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,SAACjB,EAAD,UAAagB,KACb,uBAAIC,MAFGF,EADE,KAQlB,C","sources":["apiService/apiService.jsx","components/Reviews/Reviews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = 'ac42f564de8ddb77fcda2c2a24267b01';\n\nasync function fetchTrendingMovies() {\n    const response = await axios.get(`${BASE_URL}/trending/movie/day?api_key=${KEY}`);\n    return response.data.results;\n}\n\nasync function fetchMovieByQuery(query) {\n    const response = await axios.get(`${BASE_URL}/search/movie?api_key=${KEY}&query=${query}&page=1&include_adult=false`);\n    return response.data.results\n}\n\nasync function fetchMovieDetailes(movieId){\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}?api_key=${KEY}&include_adult=false`);\n    return response\n}\n\nasync function fetchMovieCast(movieId) {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}`);\n    return response.data.cast\n}\n\nasync function fetchMovieReviews(movieId) {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}`);\n    return response.data.results\n}\n\nexport { fetchTrendingMovies, fetchMovieByQuery, fetchMovieDetailes, fetchMovieCast, fetchMovieReviews }\n","import styled from \"styled-components\";\n\nexport const ReviewsList = styled.ul`\nlist-style: none;\ndisplay: flex;\nflex-direction: column;\ngap: 15px\n`\nexport const AuthorName = styled.h2`\nmargin-bottom: 5px`","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchMovieReviews } from 'apiService/apiService';\nimport {ReviewsList, AuthorName} from './Reviews.styled'\n\nexport default function Reviews() {\n  const [reviews, setReviews] = useState([]);\n  const { moviesId } = useParams();\n\n  useEffect(() => {\n    fetchMovieReviews(moviesId)\n      .then(response => setReviews([...response]))\n      .catch(error => console.log(error.message));\n  }, [moviesId]);\n\n  return (\n    <ReviewsList>\n      {reviews.map(({ id, author, content }) => (\n        <li key={id}>\n          <AuthorName>{author}</AuthorName>\n          <p>{content}</p>\n        </li>\n      ))}\n    </ReviewsList>\n  );\n}\n"],"names":["BASE_URL","KEY","fetchTrendingMovies","axios","response","data","results","fetchMovieByQuery","query","fetchMovieDetailes","movieId","fetchMovieCast","cast","fetchMovieReviews","ReviewsList","styled","AuthorName","Reviews","useState","reviews","setReviews","moviesId","useParams","useEffect","then","catch","error","console","log","message","map","id","author","content"],"sourceRoot":""}