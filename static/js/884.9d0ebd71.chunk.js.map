{"version":3,"file":"static/js/884.9d0ebd71.chunk.js","mappings":"+SAEMA,EAAW,+BACXC,EAAM,mCAAZ,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,oGAC2BC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,uCAAoDC,IAD/E,cACUG,EADV,yBAEWA,EAASC,KAAKC,SAFzB,2EAKeC,EAAkB,GAAlBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAiCC,GAAjC,uFAC2BL,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iCAA8CC,EAA9C,kBAA2DO,EAA3D,gCAD3B,cACUJ,EADV,yBAEWA,EAASC,KAAKC,SAFzB,2EAKeG,EAAmB,GAAnBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAkCC,GAAlC,uFAC2BP,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BU,EAA/B,oBAAkDT,EAAlD,yBAD3B,cACUG,EADV,yBAEWA,GAFX,2EAKeO,EAAe,GAAfA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA8BD,GAA9B,uFAC2BP,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BU,EAA/B,4BAA0DT,IADrF,cACUG,EADV,yBAEWA,EAASC,KAAKO,MAFzB,2EAKeC,EAAkB,GAAlBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAiCH,GAAjC,uFAC2BP,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BU,EAA/B,4BAA0DT,IADrF,cACUG,EADV,yBAEWA,EAASC,KAAKC,SAFzB,kE,4ICvBaQ,EAAaC,EAAAA,GAAAA,GAAH,wFAOVC,EAAaD,EAAAA,GAAAA,GAAH,oCAGVE,EAAYF,EAAAA,GAAAA,GAAH,4D,iECNP,SAASG,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAaC,EAAAA,EAAAA,MAAbD,SAMR,OAJAE,EAAAA,EAAAA,YAAU,YACJb,EAAAA,EAAAA,IAAeW,GAAUG,MAAK,SAAArB,GAAQ,OAAIiB,GAAU,OAAIjB,GAAlB,IAA8BsB,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAMG,QAAtB,GACpF,GAAE,CAACR,KAGF,SAACR,EAAD,UACGM,EAAOW,KAAI,gBAAEC,EAAF,EAAEA,GAAkBC,EAApB,EAAMC,aAA2BC,EAAjC,EAAiCA,KAAMC,EAAvC,EAAuCA,UAAvC,OACV,UAACpB,EAAD,YACE,gBAAKqB,IAAKJ,EAAW,yCAAqCA,GAArC,UAAwDK,GAAgBC,IAAKJ,EAAMK,MAAO,IAAKC,OAAQ,OAC5H,SAACxB,EAAD,UAAYkB,KACZ,uBAAIC,MAHWJ,EADP,KASjB,C","sources":["apiService/apiService.jsx","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = 'ac42f564de8ddb77fcda2c2a24267b01';\n\nasync function fetchTrendingMovies() {\n    const response = await axios.get(`${BASE_URL}/trending/movie/day?api_key=${KEY}`);\n    return response.data.results;\n}\n\nasync function fetchMovieByQuery(query) {\n    const response = await axios.get(`${BASE_URL}/search/movie?api_key=${KEY}&query=${query}&page=1&include_adult=false`);\n    return response.data.results\n}\n\nasync function fetchMovieDetailes(movieId){\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}?api_key=${KEY}&include_adult=false`);\n    return response\n}\n\nasync function fetchMovieCast(movieId) {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}`);\n    return response.data.cast\n}\n\nasync function fetchMovieReviews(movieId) {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}`);\n    return response.data.results\n}\n\nexport { fetchTrendingMovies, fetchMovieByQuery, fetchMovieDetailes, fetchMovieCast, fetchMovieReviews }\n","import styled from \"styled-components\";\n\nexport const ActorsList = styled.ul`\nlist-style: none;\ndisplay: flex;\ngap: 15px;\nflex-wrap: wrap\n`\n\nexport const ActorsItem = styled.li`\nwidth: 200px`\n\nexport const ActorName = styled.h2`\nmargin-bottom: 5px;\nfont-size: 20px`","import { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from 'react';\nimport { fetchMovieCast } from \"apiService/apiService\";\nimport { ActorsList, ActorsItem, ActorName } from \"./Cast.styled\"; \nimport defaultImage from '../../images/imageFoto.png'\n\nexport default function Cast() {\n  const [actors, setActors] = useState([]);\n  const { moviesId } = useParams();\n\n  useEffect(() => {\n        fetchMovieCast(moviesId).then(response => setActors([...response])).catch(error => console.log(error.message))\n  }, [moviesId])\n  \n  return (\n    <ActorsList>\n      {actors.map(({id, profile_path: profilePath, name, character}) => \n        <ActorsItem key={id}>\n          <img src={profilePath ? `https://image.tmdb.org/t/p/w200${profilePath}` : `${defaultImage}`} alt={name} width={200} height={300}/>\n          <ActorName>{name}</ActorName>\n          <p>{character}</p>\n        </ActorsItem>\n      )}\n   </ActorsList>\n  )\n}\n"],"names":["BASE_URL","KEY","fetchTrendingMovies","axios","response","data","results","fetchMovieByQuery","query","fetchMovieDetailes","movieId","fetchMovieCast","cast","fetchMovieReviews","ActorsList","styled","ActorsItem","ActorName","Cast","useState","actors","setActors","moviesId","useParams","useEffect","then","catch","error","console","log","message","map","id","profilePath","profile_path","name","character","src","defaultImage","alt","width","height"],"sourceRoot":""}